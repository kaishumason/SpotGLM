% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glm_extension_adam.R
\name{spot_glm}
\alias{spot_glm}
\title{Fit a Spatial GLM with Deconvolution}
\usage{
spot_glm(
  X,
  y,
  lambda,
  family,
  beta_0 = matrix(0, ncol(X), ncol(lambda)),
  offset = rep(0, nrow(X)),
  weights = NULL,
  fix_coef = matrix(FALSE, ncol(X), ncol(lambda)),
  learning_rate = 100,
  n_epochs = 50,
  batch_size = 128,
  max_diff = 1 - 1e-06,
  improvement_threshold = 1e-06,
  max_conv = 10
)
}
\arguments{
\item{X}{Design matrix of covariates (spots × covariates).}

\item{y}{Response vector (e.g., gene expression).}

\item{lambda}{Deconvolution matrix (spots × cell types).}

\item{family}{GLM family: one of \code{"spot poisson"}, \code{"spot gaussian"}, \code{"spot binomial"}, \code{"spot negative binomial"}.}

\item{beta_0}{Initial coefficients (matrix: covariates × cell types).}

\item{offset}{Optional offset term (numeric vector).}

\item{weights}{Optional observation-level weights.}

\item{fix_coef}{Logical matrix indicating which coefficients to fix.}

\item{learning_rate}{Initial learning rate for gradient descent.}

\item{n_epochs}{Number of epochs (iterations over the full data).}

\item{batch_size}{Size of mini-batches for gradient descent.}

\item{max_diff}{Convergence threshold on likelihood improvement ratio.}

\item{improvement_threshold}{Minimum change in ratio between epochs to signal progress.}

\item{max_conv}{Number of consecutive small-improvement epochs to trigger convergence.}
}
\value{
A list with:
\describe{
\item{beta}{Estimated coefficient matrix.}
\item{vcov}{Variance-covariance matrix of estimates.}
\item{dispersion}{Estimated dispersion (for NB models).}
\item{likelihood}{Final negative log-likelihood.}
\item{converged}{Logical indicating if convergence was reached.}
\item{num_epoch}{Number of epochs used.}
\item{fixed_coef}{Final fix coefficient matrix.}
}
}
\description{
Fits a generalized linear model (GLM) with deconvolution for spatial transcriptomics data,
supporting Poisson, Gaussian, Negative Binomial, and Binomial families. Optimization is
performed via gradient descent (or closed-form for Gaussian).
}

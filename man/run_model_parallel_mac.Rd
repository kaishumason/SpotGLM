% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glm_extension_adam.R
\name{run_model_parallel_mac}
\alias{run_model_parallel_mac}
\title{Parallelized Spot-GLM Model Fitting (macOS / Linux)}
\usage{
run_model_parallel_mac(
  Y,
  X,
  lambda,
  family = "spot gaussian",
  beta_0 = NULL,
  fix_coef = NULL,
  initialization = T,
  G = 0.1,
  num_cores = 1,
  offset = NULL,
  CT = NULL,
  weights = NULL,
  ct_cov_weights = NULL,
  n_epochs = 100,
  batch_size = 500,
  learning_rate = 1,
  max_diff = 1 - 1e-06,
  improvement_threshold = 1e-06,
  max_conv = 10
)
}
\arguments{
\item{Y}{Response matrix (spots × responses).}

\item{X}{Covariate matrix (spots × covariates).}

\item{lambda}{Deconvolution matrix (spots × cell types).}

\item{family}{The GLM family to use. One of: \code{"spot gaussian"}, \code{"spot poisson"},
\code{"spot negative binomial"}, or \code{"spot binomial"}.}

\item{beta_0}{Optional initial coefficient matrix (covariates × cell types).}

\item{fix_coef}{Optional logical matrix indicating which coefficients to fix (same dimensions as \code{beta_0}).}

\item{initialization}{Boolean if initialization via single cell approximation should be performed. Default TRUE.}

\item{G}{Maximum chunk size (in GB) to control memory usage during parallelization.}

\item{num_cores}{Number of CPU cores to use in parallel.}

\item{offset}{Optional numeric vector (length equal to number of spots).}

\item{CT}{Optional vector of dominant cell types per spot.}

\item{weights}{Optional observation-level weight matrix (spots × genes).}

\item{ct_cov_weights}{Optional cell-type-specific weight matrix (cell types × genes).}

\item{n_epochs}{Number of training epochs.}

\item{batch_size}{Size of each mini-batch.}

\item{learning_rate}{Initial learning rate.}

\item{max_diff}{Convergence threshold based on likelihood improvement ratio.}

\item{improvement_threshold}{Minimum improvement ratio between epochs.}

\item{max_conv}{Number of low-improvement epochs before stopping.}
}
\description{
Fits a Spot-GLM model for multiple responses (e.g., genes) in parallel using memory-safe chunking
and \code{pbmclapply}, which relies on \code{mclapply}. Only available on Unix-based systems.
}
\details{
This version uses \code{pbmcapply::pbmclapply} for parallelism. On Windows systems,
please use \code{\link{run_spot_glm_windows}}.
}

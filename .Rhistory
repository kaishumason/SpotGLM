initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
family = "negative binomial"
spot_family = "spot negative binomial"
dispersion = 1
lib_size = 500
dispersion = 5
data = sparrow::simulate_data(n = 1e5, nct = 8,family = family,
effect_range = c(-0.5,0.5),
min_effect = 0.05,
intercept_range = c(-6,-4),
library_size = lib_size, spot_ct = 2,
p = 8,num_null = 2,prob_ct = NULL,dispersion = dispersion)
colnames(data$X) = paste0("effect_",c(1:ncol(data$X))-1)
colnames(data$X)[1] = "intercept"
colnames(data$lambda) = paste0("cell_type_",c(1:ncol(data$lambda)))
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1000,max_diff = 1-1e-6,
initialization = T)
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1000,max_diff = 1-1e-6,
initialization = T)
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1000,max_diff = 1-1e-6,
initialization = T)
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1000,max_diff = 1-1e-6,
initialization = T)
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
family = "negative binomial"
spot_family = "spot negative binomial"
dispersion = 1
lib_size = 500
dispersion = 5
data = sparrow::simulate_data(n = 1e5, nct = 8,family = family,
effect_range = c(-2,2),
min_effect = 0.05,
intercept_range = c(-6,-4),
library_size = lib_size, spot_ct = 2,
p = 8,num_null = 2,prob_ct = NULL,dispersion = dispersion)
colnames(data$X) = paste0("effect_",c(1:ncol(data$X))-1)
colnames(data$X)[1] = "intercept"
colnames(data$lambda) = paste0("cell_type_",c(1:ncol(data$lambda)))
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1000,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1000,max_diff = 1-1e-6,
initialization = T)
}
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1000,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 128,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 128,
learning_rate = 1,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
family = "negative binomial"
spot_family = "spot negative binomial"
dispersion = 1
lib_size = 500
dispersion = 5
data = sparrow::simulate_data(n = 1e5, nct = 8,family = family,
effect_range = c(-0.2,0.2),
min_effect = 0.05,
intercept_range = c(-6,-4),
library_size = lib_size, spot_ct = 2,
p = 8,num_null = 2,prob_ct = NULL,dispersion = dispersion)
colnames(data$X) = paste0("effect_",c(1:ncol(data$X))-1)
colnames(data$X)[1] = "intercept"
colnames(data$lambda) = paste0("cell_type_",c(1:ncol(data$lambda)))
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 128,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 128,
learning_rate = 1,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
family = "negative binomial"
spot_family = "spot negative binomial"
dispersion = 1
lib_size = 500
dispersion = 5
data = sparrow::simulate_data(n = 1e5, nct = 8,family = family,
effect_range = c(-0.2,0.2),
min_effect = 0.05,
intercept_range = c(-6,-4),
library_size = lib_size, spot_ct = 2,
p = 8,num_null = 2,prob_ct = NULL,dispersion = dispersion)
colnames(data$X) = paste0("effect_",c(1:ncol(data$X))-1)
colnames(data$X)[1] = "intercept"
colnames(data$lambda) = paste0("cell_type_",c(1:ncol(data$lambda)))
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 128,
learning_rate = 1,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
if(spot_family == "spot binomial"){
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,weights=rep(lib_size,
length(data$y)),n_epochs = 100,batch_size= 32,
learning_rate = 10,max_diff = 1-1e-6,
initialization = T)
}else{
model = spotglm::run_model(y = data$y,X = data$X,lambda = data$lambda,
family = spot_family,offset=rep(log(lib_size),
length(data$y)),n_epochs = 100,batch_size = 32,
learning_rate = 1,max_diff = 1-1e-6,
initialization = T)
}
model$time
model$niter
plot(data$beta[-1,],model$beta_est[-1,])
abline(a=0,b=1,col = "red")
if(spot_family == "spot binomial"){
truth = spotglm::spot_binomial[["predict"]](data$X, data$beta, data$lambda)$total
pred = spotglm::spot_binomial[["predict"]](data$X, model$beta_est, data$lambda)$total
print(-binomial_lik(data$y, truth,num_obs=rep((lib_size))))
print(-binomial_lik(data$y, pred,num_obs=rep((lib_size))))
}else if(spot_family == "spot negative binomial"){
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-nb_lik(data$y, truth,disp = dispersion))
print(-nb_lik(data$y, pred,disp = model$disp))
}else{
truth = spotglm::spot_negative_binomial[["predict"]](data$X, data$beta, data$lambda, offset=rep(log(lib_size)))$total
pred = spotglm::spot_negative_binomial[["predict"]](data$X, model$beta_est, data$lambda, offset=rep(log(lib_size)))$total
print(-poisson_lik(data$y, truth))
print(-poisson_lik(data$y, pred))
}
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
setwd("/Users/kmason/Desktop/Folders/research_projects/spatial/spotglm")
devtools::document()
